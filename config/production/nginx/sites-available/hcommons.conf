#
# Allow CORS from subdomains
# See: https://serverfault.com/questions/958965/nginx-enabling-cors-for-multiple-subdomains
# 

map $http_origin $allow_origin {
    ~^https:\/\/(.*\.)?hcommons\.org$ $http_origin;
    default "";
}

server {
  listen [::]:443 ssl http2 default_server;
  listen 443 ssl http2 default_server;
  server_name ~^(?<sitename>[\w-]+\.)?(?<subdomain>[\w-]+)\.hcommons\.org$ action.mla.org symposium.mla.org *.action.mla.org *.symposium.mla.org commons.msu.edu *.commons.msu.edu;
  
  if ( $subdomain = "msu" ) {
    rewrite ^ "https://${sitename}commons.msu.edu$uri" permanent;
  }


  access_log   /srv/www/commons/logs/access.log main;
  error_log    /srv/www/commons/logs/error.log;
  
  root  /srv/www/commons/current/web;
  index index.php index.htm index.html;
  add_header Fastcgi-Cache $upstream_cache_status;

  # Specify a charset
  charset utf-8;

  # Set the max body size equal to PHP's max POST size.
  client_max_body_size 25m;

  # Multisite rewrites
  rewrite ^/(wp-.*.php)$ /wp/$1 last;
  rewrite ^/(wp-(content|admin|includes).*) /wp/$1 last;

  # SSL configuration
  include h5bp/directive-only/ssl.conf;
  include h5bp/directive-only/ssl-stapling.conf;
  ssl_dhparam /etc/nginx/ssl/dhparams.pem;
  ssl_buffer_size 1400; # 1400 bytes to fit in one MTU

  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; ";

  ssl_certificate         /etc/nginx/ssl/commons.cert;
  ssl_trusted_certificate /etc/nginx/ssl/commons.cert;
  ssl_certificate_key     /etc/nginx/ssl/commons.key;

  include includes.d/all/*.conf;
  include includes.d/commons/*.conf;
  include conf.d/hcommons/redirects.conf;

  # Allow CORS from subdomains
  # See above map directive
  add_header 'Access-Control-Allow-Origin' $allow_origin;

  # Prevent PHP scripts from being executed inside the uploads folder.
  location ~* /app/uploads/.*\.php$ {
    deny all;
  }
  
  location / {
    try_files $uri $uri/ /index.php?$args;
  }
  
  include h5bp/directive-only/cache-file-descriptors.conf;
  include h5bp/directive-only/extra-security.conf;
  include h5bp/directive-only/x-ua-compatible.conf;
  include h5bp/location/cross-domain-fonts.conf;
  include h5bp/location/protect-system-files.conf;
  
  #
  # WordPress
  #

  location ~ \.php$ {
    try_files $uri /index.php;

    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    fastcgi_param DOCUMENT_ROOT $realpath_root;
    fastcgi_pass unix:/var/run/php-fpm-wordpress.sock;
    fastcgi_buffers 16 16k;                           
    fastcgi_buffer_size 32k;
  }

  #
  # SimpleSAMLphp
  #

  location ^~ /simplesaml {
    alias /srv/www/simplesamlphp/www;

    location ~ ^(?<prefix>/simplesaml)(?<phpfile>.+?\.php)(?<pathinfo>/.*)?$ {
            include fastcgi_params;
            fastcgi_split_path_info ^(.+?\.php)(/.+)$;
            fastcgi_param SCRIPT_FILENAME $document_root$phpfile;
            fastcgi_param PATH_INFO $pathinfo if_not_empty;
            fastcgi_pass unix:/var/run/php-fpm-simplesaml.sock;
    }
  }}

# Redirect to https
server {
  listen [::]:80 default_server;
  listen 80 default_server;
  server_name hcommons.org action.mla.org symposium.mla.org *.hcommons.org *.action.mla.org *.symposium.mla.org;

  include includes.d/all/*.conf;
  include includes.d/commons/*.conf;

  location / {
    return 301 https://$host$request_uri;
  }
}
